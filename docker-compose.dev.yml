version: '3.9'
services:
  frontend:
    container_name: app_frontend
    build: ./app/frontend
    ports:
      - 3000:3000
    volumes: 
      - ./app/frontend/src:/app-frontend/src
    depends_on:
      - backend
      - whatsapp-api
    environment:
      - VITE_API_URL=http://localhost:3001
      - VITE_API_WHATSAPP=http://localhost:3002
      - VITE_PORT=3000
      - VITE_HOST=true
    # Os `healthcheck` devem garantir que a aplicação
    # está operacional, antes de liberar o container
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3001"]  # Caso utilize outra porta interna para o front, altere ela aqui também
      timeout: 10s
      retries: 5
    networks:
      - app-network

  backend:
    container_name: app_backend
    build: ./app/backend
    ports:
      - 3001:3001
    command: sh -c "npm run db:generate && npm run db:migrate && npm run dev"
    volumes: 
      - ./app/backend/src:/app-backend/src
    depends_on:
      - db
    env_file:
      - ./app/backend/.env
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3001"] # Caso utilize outra porta interna para o back, altere ela aqui também
      timeout: 10s
      retries: 5
    networks:
      - app-network

  whatsapp-api:
    container_name: app_whatsapp-api
    build: ./app/whatsapp-api
    ports:
      - 3002:3002
    volumes: 
      - ./app/whatsapp-api/src:/app-whatsapp-api/src
    environment:
      - PORT=3002
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3002"] # Caso utilize outra porta interna para o back, altere ela aqui também
      timeout: 10s
      retries: 5
    networks:
      - app-network

  db-studio:
    container_name: app_db-studio
    build: ./app/backend
    ports:
      - 5555:5555
    working_dir: /app-backend
    command: sh -c "npm run db:studio"
    depends_on:
      - backend
    environment:
      - DATABASE_URL=postgres://root:root@db:5432/queue-dev
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:5555"] # Caso utilize outra porta interna para o back, altere ela aqui também
      timeout: 10s
      retries: 5
    networks:
      - app-network

  db:
    image: postgres:latest
    container_name: db
    platform: linux/x86_64
    ports:
      - 5432:5432/tcp
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
    restart: always
    networks:
      - app-network 

networks:
  app-network:
    driver: bridge